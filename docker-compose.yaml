services:
  app-main:
    image: ghcr.io/foto-leistenschneider/admin-panel:latest
    environment:
      - PORT=80
      - BACKUP_DIR=/backups
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - /mnt/data/backups:/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-main.rule=Host(`admin.ergatikos.com`)"
      - "traefik.http.services.app-main.loadbalancer.server.port=80"
      - "traefik.http.routers.app-main.entrypoints=websecure"
      - "traefik.http.routers.app-main.tls=true"
      - "traefik.http.routers.app-main.tls.certresolver=letsencrypt"
      - "traefik.docker.network=traefik_network"
    networks:
      - traefik_network

  vault:
    image: hashicorp/vault:1.20
    restart: unless-stopped
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://vault.admin.ergatikos.com
    volumes:
      - ./vault/config:/vault/config
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    command: ["vault", "server", "-config=/vault/config/vault.hcl"]
    cap_add:
      - IPC_LOCK
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.admin.ergatikos.com`)"
      - "traefik.http.services.vault.loadbalancer.server.port=8200"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.routers.vault.tls.certresolver=letsencrypt"
      - "traefik.docker.network=traefik_network"
    networks:
      - traefik_network

  traefik:
    image: traefik:3
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./reverse-proxy/traefik.yaml:/traefik.yaml:ro
      - ./reverse-proxy/dynamic.yaml:/dynamic.yaml:ro
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --configFile=/traefik.yaml
    environment:
      - DOCKER_NETWORK=traefik_network
    networks:
      - traefik_network

networks:
  traefik_network:
    name: traefik_network
    driver: bridge
